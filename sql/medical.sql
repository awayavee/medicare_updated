
  
-- MySQL Script generated by MySQL Workbench
-- 12/06/19 14:23:48
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
drop schema if exists medical;
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema medical
-- -----------------------------------------------------
-- drop schema medical
-- -----------------------------------------------------
-- Schema medical
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `medical` DEFAULT CHARACTER SET utf8 ;
USE `medical` ;

-- -----------------------------------------------------
-- Table `medical`.`patient`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`patient` (
  `pt_id` INT NOT NULL AUTO_INCREMENT,
  `pt_first_name` VARCHAR(50) NOT NULL,
  `pt_last_name` VARCHAR(50) NULL,
  `pt_age` DECIMAL(2) NOT NULL,
  `pt_gender` VARCHAR(10) NOT NULL,
  `pt_date_of_birth` date NULL,
  `pt_contact_no` DECIMAL(10) NOT NULL,
  `pt_alt_contact_no` DECIMAL(10) NULL,
  `pt_email` VARCHAR(50) NOT NULL,
  `pt_password` VARCHAR(15) NOT NULL,
  `pt_address_1` VARCHAR(100) NOT NULL,
  `pt_address_2` VARCHAR(100) NULL,
  `pt_city` VARCHAR(50) NOT NULL,
  `pt_state` VARCHAR(50) NOT NULL,
  `pt_zipcode` DECIMAL(10) NOT NULL,
   `pt_status` tinyint(1) NULL,
  PRIMARY KEY (`pt_id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `medical`.`medicare_services`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`medicare_services` (
  `ms_id` INT NOT NULL AUTO_INCREMENT,
  `ms_medicare_service` VARCHAR(50) NOT NULL,
  `ms_service_description` VARCHAR(200) NOT NULL,
  `ms_amount` DECIMAL(10) NOT NULL,
  PRIMARY KEY (`ms_id`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `medical`.`doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`doctor` (
  `dc_id` INT NOT NULL AUTO_INCREMENT,
  `dc_first_name` VARCHAR(50) NOT NULL,
  `dc_last_name` VARCHAR(50) NOT NULL,
  `dc_age` DECIMAL(2) NOT NULL,
  `dc_gender` VARCHAR(10) NOT NULL,
  `dc_date_of_birth` date NULL,
  `dc_contact_no` DECIMAL(10) NOT NULL,
  `dc_alt_contact_no` DECIMAL(10) NULL,
  `dc_email` VARCHAR(50) NOT NULL,
  `dc_password` VARCHAR(15) NOT NULL,
  `dc_address_1` VARCHAR(100) NOT NULL,
  `dc_address_2` VARCHAR(100) NULL,
  `dc_city` VARCHAR(50) NOT NULL,
  `dc_state` VARCHAR(50) NOT NULL,
  `dc_zipcode` DECIMAL(10) NOT NULL,
  `dc_degree` VARCHAR(50) NOT NULL,
  `dc_speciality` VARCHAR(50) NOT NULL,
  `dc_work_hours` VARCHAR(100) NOT NULL,
  `dc_hospital_name` VARCHAR(100) NOT NULL,
	`dc_status` tinyint(1) NULL,
  `dc_ms_id` INT NULL,
  PRIMARY KEY (`dc_id`),
   INDEX `fk_doctor_medicare_services1_idx` (`dc_ms_id` ASC),
  CONSTRAINT `fk_doctor_medicare_services1`
    FOREIGN KEY (`dc_ms_id`)
    REFERENCES `medical`.`medicare_services` (`ms_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`agent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`agent` (
  `ag_id` INT NOT NULL AUTO_INCREMENT,
  `ag_first_name` VARCHAR(50) NOT NULL,
  `ag_last_name` VARCHAR(50) NOT NULL,
  `ag_age` DECIMAL(2) NOT NULL,
  `ag_gender` VARCHAR(10) NOT NULL,
  `ag_date_of_birth` date NULL,
  `ag_contact_no` DECIMAL(10) NOT NULL,
  `ag_alt_contact_no` DECIMAL(10) NULL,
  `ag_email` VARCHAR(50) NOT NULL,
  `ag_password` VARCHAR(15) NOT NULL,
  `ag_address_1` VARCHAR(100) NOT NULL,
  `ag_address_2` VARCHAR(100) NULL,
  `ag_city` VARCHAR(50) NOT NULL,
  `ag_state` VARCHAR(50) NOT NULL,
  `ag_zipcode` DECIMAL(10) NOT NULL,
   `ag_status` tinyint(1) NULL,
  PRIMARY KEY (`ag_id`))
ENGINE = InnoDB;





-- -----------------------------------------------------
-- Table `medical`.`medical_test_history`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`medical_test_history` (
  `mt_report_id` INT NOT NULL AUTO_INCREMENT,
  `mt_customer_id` INT NOT NULL,
  `mt_doctor_id` INT NOT NULL,
  `mt_ms_id` INT NOT NULL,
  `mt_agent_id` INT NOT NULL,
  `mt_service_date` VARCHAR(10) NOT NULL,
  `mt_test_result_date` VARCHAR(10) NOT NULL,
  `mt_diag_1_actual_value` DECIMAL(10) NOT NULL,
  `mt_diag_1_normal_range` DECIMAL(10) NOT NULL,
  `mt_diag_2_actual_value` DECIMAL(10) NULL,
  `mt_diag_2_normal_range` DECIMAL(10) NULL,
  `mt_diag_3_actual_value` DECIMAL(10) NULL,
  `mt_diag_3_normal_range` DECIMAL(10) NULL,
  `mt_diag_4_actual_value` DECIMAL(10) NULL,
  `mt_diag_4_normal_range` DECIMAL(10) NULL,
  `mt_diag_5_actual_value` DECIMAL(10) NULL,
  `mt_diag_5_normal_range` DECIMAL(10) NULL,
  `mt_diag_6_actual_value` DECIMAL(10) NULL,
  `mt_diag_6_normal_range` DECIMAL(10) NULL,
  `mt_doc_comments` VARCHAR(300) NOT NULL,
  `mt_other_info` VARCHAR(300) NULL,
  `mt_pt_id` INT NOT NULL,
  PRIMARY KEY (`mt_report_id`),
  INDEX `fk_medical_test_history_patient1_idx` (`mt_pt_id` ASC),
  CONSTRAINT `fk_medical_test_history_patient1`
    FOREIGN KEY (`mt_pt_id`)
    REFERENCES `medical`.`patient` (`pt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`feeback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`feeback` (
  `fb_ass_id` INT NOT NULL AUTO_INCREMENT,
  `fb_qt_1` VARCHAR(200) NOT NULL,
  `fb_qt_2` VARCHAR(200) NOT NULL,
  `fb_qt_3` VARCHAR(200) NOT NULL,
  `fb_qt_4` VARCHAR(200) NOT NULL,
  `fb_qt_5` VARCHAR(200) NOT NULL,
  `fb_qt_6` VARCHAR(200) NOT NULL,
  `fb_qt_7` VARCHAR(200) NOT NULL,
  `fb_qt_8` VARCHAR(200) NOT NULL,
  `fb_qt_9` VARCHAR(200) NOT NULL,
  `fb_qt_10` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`fb_ass_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`admin`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`admin` (
  `ad_id` INT NOT NULL AUTO_INCREMENT,
  `ad_first_name` VARCHAR(50) NOT NULL,
  `ad_last_name` VARCHAR(50) NOT NULL,
  `ad_age` DECIMAL(2) NOT NULL,
  `ad_gender` VARCHAR(10) NOT NULL,
  `ad_date_of_birth` date not NULL,
  `ad_contact_no` VARCHAR(10) NOT NULL,
  `ad_alt_contact_no` VARCHAR(10) NULL,
  `ad_email` VARCHAR(50) NOT NULL,
  `ad_password` VARCHAR(15) NOT NULL,
   `ad_status` tinyint(1) NULL,
  PRIMARY KEY (`ad_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`user` (
  `us_id` INT NOT NULL AUTO_INCREMENT,
  `us_username` VARCHAR(45) NOT NULL,
  `us_password` VARCHAR(100) NOT NULL,
  `us_ad_id` INT NULL,
  `us_pt_id` INT NULL,
  `us_dc_id` INT NULL,
  `us_ag_id` INT NULL,
  `us_status` tinyint(1) NULL,
  PRIMARY KEY (`us_id`),
  INDEX `fk_user_admin1_idx` (`us_ad_id` ASC),
  INDEX `fk_user_patient1_idx` (`us_pt_id` ASC),
  INDEX `fk_user_doctor1_idx` (`us_dc_id` ASC),
  INDEX `fk_user_agent1_idx` (`us_ag_id` ASC),
  CONSTRAINT `fk_user_admin1`
    FOREIGN KEY (`us_ad_id`)
    REFERENCES `medical`.`admin` (`ad_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_patient1`
    FOREIGN KEY (`us_pt_id`)
    REFERENCES `medical`.`patient` (`pt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_doctor1`
    FOREIGN KEY (`us_dc_id`)
    REFERENCES `medical`.`doctor` (`dc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_agent1`
    FOREIGN KEY (`us_ag_id`)
    REFERENCES `medical`.`agent` (`ag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`user_feedback`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`user_feedback` (
  `ufb_pt_id` INT NOT NULL AUTO_INCREMENT,
  `ufb_ass_id` DECIMAL(10,0) NOT NULL,
  `ufb_rq_1` VARCHAR(200) NOT NULL,
  `ufb_rq_2` VARCHAR(200) NOT NULL,
  `ufb_rq_3` VARCHAR(200) NOT NULL,
  `ufb_rq_4` VARCHAR(200) NOT NULL,
  `ufb_rq_5` VARCHAR(200) NOT NULL,
  `ufb_rq_6` VARCHAR(200) NOT NULL,
  `ufb_rq_7` VARCHAR(200) NOT NULL,
  `ufb_rq_8` VARCHAR(200) NOT NULL,
  `ufb_rq_9` VARCHAR(200) NOT NULL,
  `ufb_rq_10` VARCHAR(200) NOT NULL,
  `ufb_ass_date` DATE NOT NULL,
  `ufb_us_id` INT NOT NULL,
  `ufb_fb_ass_id` INT NOT NULL,
  PRIMARY KEY (`ufb_pt_id`),
  INDEX `fk_user_feedback_user1_idx` (`ufb_us_id` ASC),
  INDEX `fk_user_feedback_feeback1_idx` (`ufb_fb_ass_id` ASC),
  CONSTRAINT `fk_user_feedback_user1`
    FOREIGN KEY (`ufb_us_id`)
    REFERENCES `medical`.`user` (`us_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_feedback_feeback1`
    FOREIGN KEY (`ufb_fb_ass_id`)
    REFERENCES `medical`.`feeback` (`fb_ass_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`role` (
  `ro_id` INT NOT NULL AUTO_INCREMENT,
  `ro_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ro_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`user_role` (
   `ur_id` INT NOT NULL AUTO_INCREMENT,
 `ur_us_id` INT NOT NULL,
  `ur_ro_id` INT NOT NULL,
  PRIMARY KEY (`ur_id`),
  INDEX `fk_user_has_role_role1_idx` (`ur_ro_id` ASC),
  INDEX `fk_user_has_role_user_idx` (`ur_us_id` ASC),
  CONSTRAINT `fk_user_has_role_user`
    FOREIGN KEY (`ur_us_id`)
    REFERENCES `medical`.`user` (`us_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_role_role1`
    FOREIGN KEY (`ur_ro_id`)
    REFERENCES `medical`.`role` (`ro_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`patient_doctor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`patient_doctor` (
  `pd_pt_id` INT NOT NULL,
  `pd_dc_id` INT NOT NULL,
  `pd_id` INT NOT NULL AUTO_INCREMENT,
  INDEX `fk_patient_has_doctor_doctor1_idx` (`pd_dc_id` ASC),
  INDEX `fk_patient_has_doctor_patient1_idx` (`pd_pt_id` ASC),
  PRIMARY KEY (`pd_id`),
  CONSTRAINT `fk_patient_has_doctor_patient1`
    FOREIGN KEY (`pd_pt_id`)
    REFERENCES `medical`.`patient` (`pt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_has_doctor_doctor1`
    FOREIGN KEY (`pd_dc_id`)
    REFERENCES `medical`.`doctor` (`dc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`patient_agent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`patient_agent` (
  `pa_pt_id` INT NOT NULL,
  `pa_ag_id` INT NOT NULL,
  `pa_id` INT NOT NULL AUTO_INCREMENT,
  INDEX `fk_patient_has_agent_agent1_idx` (`pa_ag_id` ASC),
  INDEX `fk_patient_has_agent_patient1_idx` (`pa_pt_id` ASC),
  PRIMARY KEY (`pa_id`),
  CONSTRAINT `fk_patient_has_agent_patient1`
    FOREIGN KEY (`pa_pt_id`)
    REFERENCES `medical`.`patient` (`pt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_patient_has_agent_agent1`
    FOREIGN KEY (`pa_ag_id`)
    REFERENCES `medical`.`agent` (`ag_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`appointment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`appointment` (
  `ap_id` INT NOT NULL AUTO_INCREMENT,
  `ap_pt_first_name` VARCHAR(45) NOT NULL,
  `ap_pt_last_name` VARCHAR(45) NOT NULL,
  `ap_us_id` INT NOT NULL,
  `ap_booking_date` VARCHAR(45) NOT NULL,
  `ap_appointment_date` VARCHAR(45) NOT NULL,
  `ap_status` INT NOT NULL,
  `ap_medicare_service_id` INT NOT NULL,
  `ap_dc_id` INT NOT NULL,
  PRIMARY KEY (`ap_id`),
  INDEX `fk_appointment_doctor1_idx` (`ap_dc_id` ASC),
  CONSTRAINT `fk_appointment_doctor1`
    FOREIGN KEY (`ap_dc_id`)
    REFERENCES `medical`.`doctor` (`dc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `medical`.`doctor_medicare_services`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `medical`.`doctor_medicare_services` (
  `dms_dc_id` INT NOT NULL,
  `dms_ms_id` INT NOT NULL,
  `dms_id` INT NOT NULL AUTO_INCREMENT,
  INDEX `fk_doctor_has_medicare_services_medicare_services1_idx` (`dms_ms_id` ASC),
  INDEX `fk_doctor_has_medicare_services_doctor1_idx` (`dms_dc_id` ASC),
  PRIMARY KEY (`dms_id`),
  CONSTRAINT `fk_doctor_has_medicare_services_doctor1`
    FOREIGN KEY (`dms_dc_id`)
    REFERENCES `medical`.`doctor` (`dc_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_doctor_has_medicare_services_medicare_services1`
    FOREIGN KEY (`dms_ms_id`)
    REFERENCES `medical`.`medicare_services` (`ms_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

